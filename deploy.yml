apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    app: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      serviceAccountName: flask-app-sa
      containers:
      - name: flask-app
        image: gcr.io/[PROJECT_ID]/flask-bigquery-app
        ports:
        - containerPort: 5000
        env:
        - name: PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: flask-app-config
              key: PROJECT_ID
        - name: DATASET_ID
          valueFrom:
            configMapKeyRef:
              name: flask-app-config
              key: DATASET_ID
        - name: TABLE_ID
          valueFrom:
            configMapKeyRef:
              name: flask-app-config
              key: TABLE_ID
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-config
data:
  PROJECT_ID: "your-gcp-project-id"
  DATASET_ID: "your-bigquery-dataset-id"
  TABLE_ID: "your-bigquery-table-id"

---
apiVersion: v1
kind: Service
metadata:
  name: flask-bigquery-service
spec:
  selector:
    app: flask-bigquery
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: LoadBalancer
